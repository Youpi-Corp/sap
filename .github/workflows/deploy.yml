name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  APP_NAME: brainforest-api
  DEPLOY_PATH: ~/brainforest-api

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies and build
        run: |
          bun install --frozen-lockfile
          bun run build

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to server
        run: |
          # Create deployment directory
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "mkdir -p ${{ env.DEPLOY_PATH }}"          # Sync files (exclude unnecessary files)
          rsync -avz --delete \
            --exclude='.git' \
            --exclude='node_modules' \
            --exclude='.env*' \
            --exclude='*.log' \
            ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ env.DEPLOY_PATH }}/

      - name: Install and restart application
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: ${{ secrets.PORT }}
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            set -e
            cd ${{ env.DEPLOY_PATH }}
            
            # Set environment variables for this session
            export NODE_ENV=production
            export DATABASE_URL="${{ secrets.DATABASE_URL }}"
            export JWT_SECRET="${{ secrets.JWT_SECRET }}"
            export PORT="${{ secrets.PORT }}"
            
            # Install production dependencies
            bun install --production --frozen-lockfile
            
            # Run migrations
            bun run migrate            # Install PM2 if not already installed
            if ! command -v pm2 &> /dev/null; then
              npm install -g pm2
            fi
            
            # Find Bun installation path
            BUN_PATH=""
            if [ -f "$HOME/.bun/bin/bun" ]; then
              BUN_PATH="$HOME/.bun/bin/bun"
            elif command -v bun &> /dev/null; then
              BUN_PATH=$(which bun)
            else
              echo "❌ Bun not found on server"
              exit 1
            fi
            
            echo "Using Bun at: $BUN_PATH"
            
            # Restart PM2 process
            pm2 delete ${{ env.APP_NAME }} 2>/dev/null || true
            
            # Start the application using Bun interpreter
            pm2 start --interpreter "$BUN_PATH" \
              --name ${{ env.APP_NAME }} \
              dist/index.js
            
            pm2 save
            
            # Health check
            sleep 3
            if pm2 list | grep -q "${{ env.APP_NAME }}.*online"; then
              echo "✅ Deployment successful"
            else
              echo "❌ Deployment failed"
              pm2 logs ${{ env.APP_NAME }} --lines 10
              exit 1
            fi
          EOF
