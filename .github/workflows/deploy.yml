# filepath: d:\Github\Brainforest\sap\.github\workflows\deploy.yml
name: Deploy Backend to VM

on:
  push:
    branches:
      - main # Or your deployment branch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest # Or lock to a specific version

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Generate migrations (if schema changed)
        run: |
          if [ -f "src/db/schema.ts" ]; then
            bun run db:generate
          fi

      - name: Build project
        run: bun run build

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            dist/
            package.json
            bun.lockb
            drizzle/       # Add the drizzle folder containing SQL migrations
            drizzle.config.ts
            # Add any other files needed for production
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add known hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to VM and run migrations
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: ${{ secrets.PORT }}
        run: |
          echo "Ensuring deployment directory exists on VM..."
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "mkdir -p ${{ secrets.DEPLOY_PATH }}"          echo "Syncing full source code to VM..."
          rsync -avz --delete --exclude node_modules --exclude .git ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.DEPLOY_PATH }}/

          echo "Running deployment commands on VM..."
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << EOF
            cd ${{ secrets.DEPLOY_PATH }} || exit 1

            # Export environment variables
            export NODE_ENV="production"
            export PORT="${PORT:-8080}"
            export DATABASE_URL="${DATABASE_URL}"
            export JWT_SECRET="${JWT_SECRET}"            # Install production dependencies only
            echo "Installing production dependencies..."
            bun install --production --frozen-lockfile

            # Run database migrations using drizzle-kit
            echo "Validating migration environment..."
            bun run db:validate
            
            echo "Running database migrations..."
            bun run db:migrate

            # Start or restart the application using PM2
            echo "Restarting application with PM2..."
            /usr/local/bin/pm2 restart brainforest-api --update-env || /usr/local/bin/pm2 start npm --name brainforest-api -- run start --update-env

            sleep 2
            /usr/local/bin/pm2 save
            echo "Deployment complete. Application managed by PM2."
          EOF
